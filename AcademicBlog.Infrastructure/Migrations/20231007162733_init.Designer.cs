// <auto-generated />
using System;
using AcademicBlog.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademicBlog.Infrastructure.Migrations
{
    [DbContext(typeof(AcademicBlogDbContext))]
    [Migration("20231007162733_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Account__3214EC277C099CDF");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Username", "Email" }, "UC_Username_Email")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Bookmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("CreatorID");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.HasKey("Id")
                        .HasName("PK__Bookmark__3214EC27B06F2739");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PostId");

                    b.ToTable("Bookmark", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC27489DE8C0");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("CreatorID");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.HasKey("Id")
                        .HasName("PK__Comment__3214EC27EBE64D02");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PostId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("CreatorID");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.HasKey("Id")
                        .HasName("PK__Favourit__3214EC27C7CF2A6D");

                    b.HasIndex("PostId");

                    b.ToTable("Favourite", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Hit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SessionID");

                    b.HasKey("Id")
                        .HasName("PK__Hit__3214EC270302DCA0");

                    b.HasIndex("PostId");

                    b.HasIndex(new[] { "SessionId" }, "UC_SessionID")
                        .IsUnique();

                    b.ToTable("Hit", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("ReceiverID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC27DD018ABC");

                    b.HasIndex("PostId");

                    b.HasIndex("ReceiverId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApproveDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ApproverId")
                        .HasColumnType("int")
                        .HasColumnName("ApproverID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Post__3214EC27773A454B");

                    b.HasIndex("ApproverId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.PostTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("TagID");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTag", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC27E8245A8B");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Tag__3214EC27A0DFC654");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Account", b =>
                {
                    b.HasOne("AcademicBlog.Infrastructure.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Account_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Bookmark", b =>
                {
                    b.HasOne("AcademicBlog.Infrastructure.Entities.Account", "Creator")
                        .WithMany("Bookmarks")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK_Bookmark_Account");

                    b.HasOne("AcademicBlog.Infrastructure.Entities.Post", "Post")
                        .WithMany("Bookmarks")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Bookmark_Post");

                    b.Navigation("Creator");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Comment", b =>
                {
                    b.HasOne("AcademicBlog.Infrastructure.Entities.Account", "Creator")
                        .WithMany("Comments")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK_Comment_Account");

                    b.HasOne("AcademicBlog.Infrastructure.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Comment_Post");

                    b.Navigation("Creator");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Favourite", b =>
                {
                    b.HasOne("AcademicBlog.Infrastructure.Entities.Post", "Post")
                        .WithMany("Favourites")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Favourite_Post");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Hit", b =>
                {
                    b.HasOne("AcademicBlog.Infrastructure.Entities.Post", "Post")
                        .WithMany("Hits")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Hit_Post");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Notification", b =>
                {
                    b.HasOne("AcademicBlog.Infrastructure.Entities.Post", "Post")
                        .WithMany("Notifications")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_Post");

                    b.HasOne("AcademicBlog.Infrastructure.Entities.Account", "Receiver")
                        .WithMany("Notifications")
                        .HasForeignKey("ReceiverId")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_Account");

                    b.Navigation("Post");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Post", b =>
                {
                    b.HasOne("AcademicBlog.Infrastructure.Entities.Account", "Approver")
                        .WithMany("PostApprovers")
                        .HasForeignKey("ApproverId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_Approver");

                    b.HasOne("AcademicBlog.Infrastructure.Entities.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_Category");

                    b.HasOne("AcademicBlog.Infrastructure.Entities.Account", "Creator")
                        .WithMany("PostCreators")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_Account");

                    b.Navigation("Approver");

                    b.Navigation("Category");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.PostTag", b =>
                {
                    b.HasOne("AcademicBlog.Infrastructure.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_PostTag_Post");

                    b.HasOne("AcademicBlog.Infrastructure.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("FK_PostTag_Tag");

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Account", b =>
                {
                    b.Navigation("Bookmarks");

                    b.Navigation("Comments");

                    b.Navigation("Notifications");

                    b.Navigation("PostApprovers");

                    b.Navigation("PostCreators");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Post", b =>
                {
                    b.Navigation("Bookmarks");

                    b.Navigation("Comments");

                    b.Navigation("Favourites");

                    b.Navigation("Hits");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("AcademicBlog.Infrastructure.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
