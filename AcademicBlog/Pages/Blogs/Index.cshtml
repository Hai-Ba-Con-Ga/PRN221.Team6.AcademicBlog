@page
@model AcademicBlog.Pages.Blogs.IndexModel
@using AcademicBlog.BussinessObject;
@using Markdig;
@{
    string currentTab = Request.Query["tab"].ToString();
    if (string.IsNullOrEmpty(currentTab))
    {
        currentTab = Model.Tabs[0].Key;
    }
}
<div class="px-8 mx-auto xl:px-5  max-w-screen-xl py-5 lg:py-8">
    <div class="sm:hidden">
        <label for="tabs" class="sr-only">Select a tab</label>
        <!-- Use an "onChange" listener to redirect the user to the selected tab URL. -->
        <select id="tabs" name="tabs" class="block w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500" onchange="window.location.href = this.value;">
            @foreach (var tab in Model.Tabs)
            {
                <!option value="?tab=@tab.Key" @(currentTab == tab.Key ? "selected" : "")>@tab.Text</!option>
            }
        </select>
    </div>
    <div class="hidden sm:block">
        <nav class="flex space-x-4 justify-center" aria-label="Tabs">
            <!-- Current: "bg-indigo-100 text-indigo-700", Default: "text-gray-500 hover:text-gray-700" -->
            @foreach (var tab in Model.Tabs)
            {
                <a href="?tab=@tab.Key" class="text-gray-500 hover:text-gray-700 rounded-md px-3 py-2 text-sm  @(currentTab==tab.Key? "bg-indigo-100 text-indigo-700 font-bold" : "font-medium")">@tab.Text</a>
            }
        </nav>
    </div>
</div>
@* <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">From the blog</h2>
<p class="mt-2 text-lg leading-8 text-gray-600">Learn how to grow your business with our expert advice.</p> *@
<div class="px-16 mx-auto xl:px-6  max-w-screen-xl py-2 lg:py-2 flex justify-between">
    <form action="" method="get" id="form">
        <input id="page" type="hidden" name="page" value="@Model.Paging.Page" />
        <input id="tab" type="hidden" name="tab" value="@Model.Tab" />

        <div class="relative mt-2 rounded-md shadow-sm">
            <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                <!svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="rgba(0,0,0,0.6)" style="transform: ;msFilter:;"><path d="M10 18a7.952 7.952 0 0 0 4.897-1.688l4.396 4.396 1.414-1.414-4.396-4.396A7.952 7.952 0 0 0 18 10c0-4.411-3.589-8-8-8s-8 3.589-8 8 3.589 8 8 8zm0-14c3.309 0 6 2.691 6 6s-2.691 6-6 6-6-2.691-6-6 2.691-6 6-6z"></path><path d="M11.412 8.586c.379.38.588.882.588 1.414h2a3.977 3.977 0 0 0-1.174-2.828c-1.514-1.512-4.139-1.512-5.652 0l1.412 1.416c.76-.758 2.07-.756 2.826-.002z"></path></!svg>
            </div>
            <input type="text" value="@(Model?.SearchKeyword ?? "")" name="searchKeyword" id="adw" class="block w-[20rem] rounded-md border-0 py-1.5 pl-10 text-gray-900 ring-1 ring-inset ring-gray-300 placeholder:text-gray-400  focus:ring-2 focus:ring-inset focus:ring-indigo-600 text-lg sm:text-sm sm:leading-6" placeholder="Keyword ...">
        </div>
        @foreach(var cat in Model.CategoryIds)
        {
            <input type="hidden" name="category" class="category-hidden" value="@cat" />
        }
    </form>
    @if (User.Identity.IsAuthenticated)
    {
        <button onclick="window.location.href='/blogs/draft'" type="button" class="inline-flex items-center gap-x-2 rounded-md bg-indigo-600 px-3.5 py-3 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
            <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
            </svg>
            Write one
        </button>
    }
</div>
<div class="bg-white max-w-screen-xl mx-auto flex gap-4">
    <div class="flex flex-col gap-2 py-5 px-4 pl-16">
        <fieldset>
            <legend class="text-base font-semibold leading-6 text-gray-900">Category</legend>
            <div class="mt-4 divide-y divide-gray-200 border-b border-gray-200">
                @foreach (var category in (IEnumerable<Category>)Model.HttpContext.Items?["Categories"])
                {
                    <div class="relative flex items-start py-4">
                        <div class="min-w-0 flex-1 text-sm leading-6">
                            <label for="person-1" class="select-none font-medium text-gray-900">@category.Name</label>
                        </div>
                        <div class="ml-3 flex h-6 items-center">
                            <input name="category" type="checkbox" @(Model.CategoryIds.Contains(category.Id) ? "checked" : "") value="@category.Id" onchange="onCategoryChange(event)" class="category h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600">
                        </div>
                    </div>

                }
            </div>
        </fieldset>
    </div>
    <div class="max-w-7xl px-6 lg:px-8 flex flex-col items-center">
        <div class=" max-w-2xl lg:max-w-4xl">
            <div class="mt-10 space-y-20 lg:mt-10 lg:space-y-20">
                @foreach (var post in Model.Posts)
                {


                    <article class="relative isolate flex flex-col gap-8 lg:flex-row shadow-lg cursor-pointer rounded-2xl" >
                        <div class="relative aspect-[16/9] sm:aspect-[2/1] lg:aspect-square lg:w-64 lg:shrink-0">
                            <img src="@Html.DisplayFor(modelItem => post.ThumbnailUrl)" alt="@Html.DisplayFor(modelItem => post.ThumbnailUrl)" class="absolute inset-0 h-full w-full rounded-l-2xl  bg-gray-50 object-cover">
                            <div class="absolute inset-0 rounded-2xl ring-1 ring-inset ring-gray-900/10"></div>
                        </div>
                        <div class="p-4">
                            <div class="flex items-center gap-x-4 text-xs">
                                <time datetime="2020-03-16" class="text-gray-500">@Html.DisplayFor(modelItem => post.CreatedDate)</time>
                                <a href="#" class="relative z-10 rounded-full bg-gray-50 px-3 py-1.5 font-medium text-gray-600 hover:bg-gray-100">@Html.DisplayFor(modelItem => post.Category.Name)</a>
                            </div>
                            <div class="group relative max-w-xl">
                                <h3 class="mt-3 text-lg font-semibold leading-6 text-gray-900 group-hover:text-gray-600">
                                    <a href="/blogs/@post.Id">
                                        <span class="absolute inset-0"></span>
                                        @Html.DisplayFor(modelItem => post.Title)
                                    </a>
                                </h3>
                                <div class="line-clamp-5">
                                    <p class="mt-5 text-sm leading-6 text-gray-600">@Html.Raw(Markdown.ToHtml(post.Content.Replace("http","ws")))</p>
                                </div
                            </div>
                            <div class="mt-6 flex border-t border-gray-900/5 pt-6">
                                <div class="relative flex items-center gap-x-4">
                                    <img src="@Html.DisplayFor(modelItem => post.Creator.AvatarUrl)" alt="" class="h-10 w-10 rounded-full bg-gray-50">
                                    <div class="text-sm leading-6">
                                        <p class="font-semibold text-gray-900">
                                            <a href="#" onclick="window.location.href='/profile/@post.CreatorId'">
                                                <span class="absolute inset-0"></span>
                                                @Html.DisplayFor(modelItem => post.Creator.Fullname)
                                            </a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </article>


                }
                @* <article class="relative isolate flex flex-col gap-8 lg:flex-row">
                <div class="relative aspect-[16/9] sm:aspect-[2/1] lg:aspect-square lg:w-64 lg:shrink-0">
                <img src="https://images.unsplash.com/photo-1496128858413-b36217c2ce36?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3603&q=80" alt="" class="absolute inset-0 h-full w-full rounded-2xl bg-gray-50 object-cover">
                <div class="absolute inset-0 rounded-2xl ring-1 ring-inset ring-gray-900/10"></div>
                </div>
                <div>
                <div class="flex items-center gap-x-4 text-xs">
                <time datetime="2020-03-16" class="text-gray-500">Mar 16, 2020</time>
                <a href="#" class="relative z-10 rounded-full bg-gray-50 px-3 py-1.5 font-medium text-gray-600 hover:bg-gray-100">Marketing</a>
                </div>
                <div class="group relative max-w-xl">
                <h3 class="mt-3 text-lg font-semibold leading-6 text-gray-900 group-hover:text-gray-600">
                <a href="/blogs/1">
                <span class="absolute inset-0"></span>
                Boost your conversion rate
                </a>
                </h3>
                <p class="mt-5 text-sm leading-6 text-gray-600">Illo sint voluptas. Error voluptates culpa eligendi. Hic vel totam vitae illo. Non aliquid explicabo necessitatibus unde. Sed exercitationem placeat consectetur nulla deserunt vel iusto corrupti dicta laboris incididunt.</p>
                </div>
                <div class="mt-6 flex border-t border-gray-900/5 pt-6">
                <div class="relative flex items-center gap-x-4">
                <img src="https://images.unsplash.com/photo-1519244703995-f4e0f30006d5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="" class="h-10 w-10 rounded-full bg-gray-50">
                <div class="text-sm leading-6">
                <p class="font-semibold text-gray-900">
                <a href="#">
                <span class="absolute inset-0"></span>
                Michael Foster
                </a>
                </p>
                <p class="text-gray-600">Co-Founder / CTO</p>
                </div>
                </div>
                </div>
                </div>
                </article> *@

                <!-- More posts... -->
            </div>
            @{
                int from = (int)(Model.Paging.Page - 1) * (int)Model.Paging.PageSize;
                int to = (from + (int)Model.Paging.PageSize) > Model.Paging.Total ? Model.Paging.Total : from + (int)Model.Paging.PageSize;
            }
            <nav class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6 mt-8" aria-label="Pagination">
                <div class="hidden sm:block">
                    <p class="text-sm text-gray-700">
                        Showing
                        <span class="font-medium">@(from + 1)</span>
                        to
                        <span class="font-medium">@to</span>
                        of
                        <span class="font-medium">@Model.Paging.Total</span>
                        results
                    </p>
                </div>
                @{

                    bool isPrevious = Model.Paging.Page > 1;
                    bool isNext = Model.Paging.Page < Model.Paging.PageCount;
                }
                <div class="flex flex-1 justify-between sm:justify-end">
                    <button id="prev" @(isPrevious ? "" : "disabled") class="relative inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold  ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus-visible:outline-offset-0 @(isPrevious ? "hover:border-gray-300 text-gray-900" : "text-gray-300 cursor-not-allowed")">Previous</button>
                    <button id="next" @(isNext ? "" : "disabled") class="relative ml-3 inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus-visible:outline-offset-0 @(isNext ? "hover:border-gray-300  text-gray-900" : "text-gray-300 cursor-not-allowed") ">Next</button>
                </div>
            </nav>
        </div>
    </div>
</div>
<script>
    const prev = document.getElementById("prev");
    const next = document.getElementById("next");
    const pageField = document.getElementById("page")
    @{
        int nextPage = Model.Paging.Page + 1;
        int prevPage = Model.Paging.Page - 1;
    }
        prev.onclick = () => {
            pageField.setAttribute("value", "@prevPage");
            $('#form').submit();
        }
    next.onclick = () => {
        pageField.setAttribute("value", "@nextPage");
        $('#form').submit();
    }
    const onCategoryChange = (e) => {
        const form = document.getElementById("form");
        const value = e.target.value;

        // Find existing hidden input fields with class "category-hidden"
        const categoryFields = document.querySelectorAll(".category-hidden");
        
        // Check if the checkbox is checked
        if (e.target.checked) {
            // Create a new hidden input field for the selected category
            const categoryField = document.createElement("input");
            categoryField.classList.add("category-hidden");
            categoryField.setAttribute("type", "hidden"); // Set input type to hidden
            categoryField.setAttribute("name", "category");
            categoryField.setAttribute("value", value);
            categoryField.setAttribute("id", e.target.getAttribute("id"));
            form.appendChild(categoryField);
        } else {
            // Remove the hidden input field for the deselected category, if it exists
            for (const categoryField of categoryFields) {
                if (categoryField.value === value) {
                    form.removeChild(categoryField);
                }
            }
        }
        form.submit();
    }
</script>
